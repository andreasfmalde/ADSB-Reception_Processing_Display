// Code generated by MockGen. DO NOT EDIT.
// Source: .\backend\internal\service\restService\restService.go

// Package mockData is a generated GoMock package.
package mock

import (
	models "adsb-api/internal/global/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRestService is a mockData of RestService interface.
type MockRestService struct {
	ctrl     *gomock.Controller
	recorder *MockRestServiceMockRecorder
}

// MockRestServiceMockRecorder is the mockData recorder for MockRestService.
type MockRestServiceMockRecorder struct {
	mock *MockRestService
}

// NewMockRestService creates a new mockData instance.
func NewMockRestService(ctrl *gomock.Controller) *MockRestService {
	mock := &MockRestService{ctrl: ctrl}
	mock.recorder = &MockRestServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestService) EXPECT() *MockRestServiceMockRecorder {
	return m.recorder
}

// GetAircraftHistoryByIcao mocks base method.
func (m *MockRestService) GetAircraftHistoryByIcao(search string) ([]models.AircraftHistoryModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAircraftHistoryByIcao", search)
	ret0, _ := ret[0].([]models.AircraftHistoryModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAircraftHistoryByIcao indicates an expected call of GetAircraftHistoryByIcao.
func (mr *MockRestServiceMockRecorder) GetAircraftHistoryByIcao(search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAircraftHistoryByIcao", reflect.TypeOf((*MockRestService)(nil).GetAircraftHistoryByIcao), search)
}

// GetAircraftHistoryByIcaoFilterByTimestamp mocks base method.
func (m *MockRestService) GetAircraftHistoryByIcaoFilterByTimestamp(search string, hour int) ([]models.AircraftHistoryModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAircraftHistoryByIcaoFilterByTimestamp", search, hour)
	ret0, _ := ret[0].([]models.AircraftHistoryModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAircraftHistoryByIcaoFilterByTimestamp indicates an expected call of GetAircraftHistoryByIcaoFilterByTimestamp.
func (mr *MockRestServiceMockRecorder) GetAircraftHistoryByIcaoFilterByTimestamp(search, hour interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAircraftHistoryByIcaoFilterByTimestamp", reflect.TypeOf((*MockRestService)(nil).GetAircraftHistoryByIcaoFilterByTimestamp), search, hour)
}

// GetCurrentAircraft mocks base method.
func (m *MockRestService) GetCurrentAircraft() ([]models.AircraftCurrentModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentAircraft")
	ret0, _ := ret[0].([]models.AircraftCurrentModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentAircraft indicates an expected call of GetCurrentAircraft.
func (mr *MockRestServiceMockRecorder) GetCurrentAircraft() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentAircraft", reflect.TypeOf((*MockRestService)(nil).GetCurrentAircraft))
}